# data only container pattern
data:
  image: muccg/debian8-base:latest
  volumes:
    - .:/app
    - data/dev:/data

ssh:
  image: muccg/ssh
  hostname: ssh

db:
  image: postgres:9.4
  environment:
    - POSTGRES_USER=yabiapp
    - POSTGRES_PASSWORD=yabiapp
  ports:
    - ":5432"

mq:
  image: rabbitmq:management
  ports:
    - ":5672"
    - ":15672"

cache:
  image: memcached:1.4

web:
  build: .
  command: runserver
  hostname: web
  domainname: dockerdomain
  environment:
    - DJANGO_SETTINGS_MODULE=yabi.settings
    - DBUSER=yabiapp
    # - AUTH_TYPE=ldap
    - AUTH_TYPE=kerberos+ldap
    - AUTH_KERBEROS_REALM=DOCKERDOMAIN
    - AUTH_LDAP_SERVER=ldap://ldap
    - AUTH_LDAP_USER_BASE=ou=People,dc=dockerdomain
    - AUTH_LDAP_YABI_GROUP_DN=cn=Yabi,ou=Web Groups,ou=Groups,dc=dockerdomain
    - AUTH_LDAP_YABI_ADMIN_GROUP_DN=cn=Yabi Admin,ou=Web Groups,ou=Groups,dc=dockerdomain
    - AUTH_LDAP_MEMBER_OF_ATTR=postalAddress
    - AUTH_ENABLE_DB_FALLBACK=false
    - WAIT_FOR_QUEUE=1
    - WAIT_FOR_DB=1
    - WAIT_FOR_CACHE=1
    - WAIT_FOR_SSH=1
    - WAIT_FOR_KERBEROS=1
    - WAIT_FOR_LDAP=1
  volumes_from:
    - data
  ports:
    - "8000:8000"
  links:
    - db
    - mq
    - cache
    - ssh
    - krb5
    - krb5:kerberos.dockerdomain
    - ldap

celery:
  image: yabi_web
  command: celery
  hostname: celery
  environment:
    - DJANGO_SETTINGS_MODULE=yabi.settings
    - CELERY_APP=yabi.backend.celerytasks
    - CELERY_AUTORELOAD=1
    - DBUSER=yabiapp
    - WAIT_FOR_QUEUE=1
    - WAIT_FOR_DB=1
    - WAIT_FOR_CACHE=1
    - WAIT_FOR_SSH=1
  volumes_from:
    - data
  links:
    - db
    - mq
    - cache
    - ssh

krb5:
  image: muccg/kerberos
  hostname: kerberos
  domainname: dockerdomain
  command: supervisord
  ports:
    - ":9001"
    - ":88"
    - ":749"
    - ":464"

ldap:
  image: muccg/ds389
  hostname: ldap
  domainname: dockerdomain
  command: supervisord
  ports:
    - ":9001"
    - ":389"
    - ":9830"
