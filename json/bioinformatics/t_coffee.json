{"tool": {"outputExtensions": [{"must_be_larger_than": null, "must_exist": null, "file_extension__pattern": "*.aln"}], "display_name": "t_coffee", "name": "t_coffee", "parameter_list": [{"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-run_name", "acceptedExtensionList": [], "helptext": "Sets the prefix of all the output files.", "batch_bundle_files": false, "hidden": false, "id": 2457, "switch_use__display_text": "combined with equals"}, {"default_value": "0", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "No", "value": "0"}, {"display": "Yes", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-extend", "acceptedExtensionList": [], "helptext": "Do library extention on the fly.", "batch_bundle_files": false, "hidden": false, "id": 2459, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "Fast triplet extension", "value": "fast_triplet"}, {"display": "Slow triplet extension, limited to the -max_n_pair best sequence pairs when aligning two profiles", "value": "very_fast_triplet"}, {"display": "Exhaustive use of all the triplets", "value": "slow_triplet"}, {"display": "Use of the matrix -matrix", "value": "matrix"}, {"display": "Use of the matrix -matrix. Profiles are turned into consensus", "value": "fast_matrix"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-extend_mode", "acceptedExtensionList": [], "helptext": "Controls the algorithm for matrix extension. ", "batch_bundle_files": false, "hidden": false, "id": 2460, "switch_use__display_text": "combined with equals"}, {"default_value": "0", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "No", "value": "0"}, {"display": "Yes", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-do_self", "acceptedExtensionList": [], "helptext": "This flag causes the extension to carried out within the sequences (as opposed to between sequences). This is necessary when looking for internal repeats with Mocca.\r\n", "batch_bundle_files": false, "hidden": false, "id": 2464, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": true, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-out_lib", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2467, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": true, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-outseqweight", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2468, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-cosmetic_penalty", "acceptedExtensionList": [], "helptext": "Indicates the penalty applied for opening a gap. This penalty is set to a very low value. It will only have an influence on the portions of the alignment that are unalignable. It will not make them more correct, but only more pleasing to the eye ( i.e. Avoid stretches of lonely residues). The cosmetic penalty is automatically turned off if a substitution matrix is used rather than a library.", "batch_bundle_files": false, "hidden": false, "id": 2470, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-gapopen", "acceptedExtensionList": [], "helptext": "Indicates the penalty applied for opening a gap. The penalty must be negative. If no value is provided when using a substitution matrix, a value will be automatically computed. Here are some guidelines regarding the tuning of gapopen and gapext. In T-Coffee matches get a score between 0 (match) and 1000 (match perfectly consistent with the library). The default cosmetic penalty is set to -50 (5% of a perfect match). If you want to tune -gapoen and see a strong effect, you should therefore consider values between 0 and -1000.", "batch_bundle_files": false, "hidden": false, "id": 2471, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-gapext", "acceptedExtensionList": [], "helptext": "Indicates the penalty applied for extending a gap (cf -gapopen).", "batch_bundle_files": false, "hidden": false, "id": 2472, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-nomatch", "acceptedExtensionList": [], "helptext": "Indicates the penalty to associate with a match. When using a library, all matches are positive or equal to 0. Matches equal to 0 are unsupported by the library but non-penalized. Setting nomatch to a non-negative value makes it possible to penalize these null matches and prevent unrelated sequences from being aligned (this can be useful when the alignments are meant to be used for structural modeling).", "batch_bundle_files": false, "hidden": false, "id": 2475, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": true, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-usetree", "acceptedExtensionList": ["*.seq", "*.fna", "*.faa", "*.fa"], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2477, "switch_use__display_text": "combined with equals"}, {"default_value": "0", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "No", "value": "0"}, {"display": "Yes", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-quicktree", "acceptedExtensionList": [], "helptext": "Causes T-Coffee to compute a fast approximate guide tree. This flag is kept for compatibility with ClustalW.", "batch_bundle_files": false, "hidden": false, "id": 2479, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": true, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-outfile", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2480, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "ClustalW format", "value": "clustalw"}, {"display": "MSF alignment", "value": "msf_aln"}, {"display": "pir alignment", "value": "pir_aln"}, {"display": "fasta alignment", "value": "fasta_aln"}, {"display": "Phylip format", "value": "phylip"}, {"display": "pir sequences (no gap)", "value": "pir_seq"}, {"display": "fasta sequences (no gap)", "value": "fasta_seq"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-output", "acceptedExtensionList": [], "helptext": "Indicates the format used for outputting the -outfile.", "batch_bundle_files": false, "hidden": false, "id": 2482, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "input_file": true, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": true, "switch": "-infile", "acceptedExtensionList": ["*.seq", "*.fna", "*.faa", "*.fa"], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2483, "switch_use__display_text": "combined with equals"}, {"default_value": "1", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "Terminal gaps penalized with -gapopen + -gapext*len", "value": "0"}, {"display": "Terminal gaps penalized with a -gapext*len", "value": "1"}, {"display": "Terminal gaps unpenalized", "value": "2"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-tg_mode", "acceptedExtensionList": [], "helptext": "Gap penalty method.", "batch_bundle_files": false, "hidden": false, "id": 2485, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "Gotoh algorithm (quadratic in memory and time)", "value": "gotoh_pair_wise"}, {"display": "Myers and Miller", "value": "myers_miller_pair_wise"}, {"display": "Fasta algorithm", "value": "fasta_pair_wise"}, {"display": "Checked Fasta algorithm", "value": "cfasta_pair_wise"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-dp_mode", "acceptedExtensionList": [], "helptext": "This flag indicates the type of dynamic programming used by the program:\r\ngotoh_pair_wise: implementation of the gotoh algorithm (quadratic in memory and time)\r\nmyers_miller_pair_wise: implementation of the Myers and Miller dynamic programming algorithm ( quadratic in time and linear in space). This algorithm is recommended for very long sequences. It is about 2 times slower than gotoh and only accepts tg_mode=1or 2 (i.e. gaps penalized for opening).\r\nfasta_pair_wise: implementation of the fasta algorithm. The sequence is hashed, looking for ktuples words. Dynamic programming is only carried out on the ndiag best scoring diagonals. This is much faster but less accurate than the two previous. This mode is controlled by the parameters -ktuple, -diag_mode and -ndiag\r\ncfasta_pair_wise: c stands for checked. It is the same algorithm. The dynamic programming is made on the ndiag best diagonals, and then on the 2*ndiags, and so on until the scores converge. Complexity will depend on the level of divergence of the sequences, but will usually be L*log(L), with an accuracy comparable to the two first mode ( this was checked on BaliBase). This mode is controlled by the parameters -ktuple, -diag_mode and \u2013ndiag", "batch_bundle_files": false, "hidden": false, "id": 2486, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "1 - Protein", "value": "1"}, {"display": "2 - DNA", "value": "2"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-ktuple", "acceptedExtensionList": [], "helptext": "Indicates the ktuple size for cfasta_pair_wise dp_mode and fasta_pair_wise. It is set to 1 for proteins, and 2 for DNA. The alphabet used for protein can be a degenerated version, set with -sim_matrix..", "batch_bundle_files": false, "hidden": false, "id": 2487, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-sim_matrix", "acceptedExtensionList": [], "helptext": "Indicates the manner in which the amino acid alphabet is degenerated when hashing in the fasta_pairwise dynamic programming. Standard ClustalW matrices are all valid. They are used to define groups of amino acids having positive substitution values. In T-Coffee, the default is a 13 letter grouping named Vasiliky, with residues grouped as follows:\r\nrk, de, qh, vilm, fy (other residues kept alone).\r\n\r\nThis alphabet is set with the flag -sim_matrix=vasiliky. In order to keep the alphabet non degenerated, -sim_matrix=idmat can be used to retain the standard alphabet.", "batch_bundle_files": false, "hidden": false, "id": 2490, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "DNA", "value": "DNA"}, {"display": "PROTEIN", "value": "PROTEIN"}, {"display": "DNA_PROTEIN", "value": "DNA_PROTEIN"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-type", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2491, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "INPUT", "value": "INPUT"}, {"display": "ALIGNED", "value": "ALIGNED"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-outorder", "acceptedExtensionList": [], "helptext": "Sets the order of the sequences in the output alignment: -outorder=input means the sequences are kept in the original order. -outorder=aligned means the sequences come in the order indicated by the tree. This order can be seen as a one-dimensional projection of the tree distances. \u2013outdorder=<filename>Filename is a legal fasta file, whose order will be used in the final alignment.", "batch_bundle_files": false, "hidden": false, "id": 2492, "switch_use__display_text": "combined with equals"}, {"default_value": "off", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "Off", "value": "off"}, {"display": "On", "value": "on"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-seqnos", "acceptedExtensionList": [], "helptext": "Causes the output alignment to contain residue numbers at the end of each line.", "batch_bundle_files": false, "hidden": false, "id": 2493, "switch_use__display_text": "combined with equals"}, {"default_value": "keep", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "Keep", "value": "keep"}, {"display": "Upper", "value": "upper"}, {"display": "Lower", "value": "lower"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-case", "acceptedExtensionList": [], "helptext": "Instructs the program on the case to be used in the output file (Clustalw uses upper case). The default keeps the case and makes it possible to maintain a mixture of upper and lower case residues.", "batch_bundle_files": false, "hidden": false, "id": 2494, "switch_use__display_text": "combined with equals"}, {"default_value": "sim", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "sim", "value": "sim"}, {"display": "winsimN", "value": "winsimN"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-weight", "acceptedExtensionList": [], "helptext": "Weight defines the way alignments are weighted when turned into a library. ", "batch_bundle_files": false, "hidden": false, "id": 2497, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Only the switch will be passed in the argument list.", "switch_use__formatstring": "%(switch)s", "batch_param": false, "switch": "-align", "acceptedExtensionList": [], "helptext": "This flag indicates that the program must produce the alignment. It is here for compatibility with ClustalW.", "batch_bundle_files": false, "hidden": false, "id": 2499, "switch_use__display_text": "switchOnly"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-start", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2501, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-len", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2502, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-scale", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2503, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "t_coffee_fast", "value": "t_coffee_fast"}, {"display": "t_coffee_slow", "value": "t_coffee_slow"}, {"display": "t_coffee_non_extended", "value": "t_coffee_non_extended"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-evaluate_mode", "acceptedExtensionList": [], "helptext": "This flag indicates the mode used to normalize the t_coffee score when computing the reliability score.\r\nt_coffee_fast: Normalization is made using the highest score in the MSA. This evaluation mode was validated and in our hands, pairs of residues with a score of 5 or higher have 90 % chances to be correctly aligned to one another.\r\nt_coffee_slow: Normalization is made using the library. This usually results in lower score and a scoring scheme more sensitive to the number of sequences in the dataset. Note that this scoring scheme is not any more slower, thanks to the implementation of a faster heuristic algorithm.\r\nt_coffee_non_extended: the score of each residue is the ratio between the sum of its non extended scores with the column and the sum of all its possible non extended scores.\r\n", "batch_bundle_files": false, "hidden": false, "id": 2505, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Only the switch will be passed in the argument list.", "switch_use__formatstring": "%(switch)s", "batch_param": false, "switch": "-get_type", "acceptedExtensionList": [], "helptext": "", "batch_bundle_files": false, "hidden": false, "id": 2506, "switch_use__display_text": "switchOnly"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Only the switch will be passed in the argument list.", "switch_use__formatstring": "%(switch)s", "batch_param": false, "switch": "-clean_aln", "acceptedExtensionList": [], "helptext": "This flag causes T-Coffee to post-process the multiple alignment. Residues that have a reliability score smaller or equal to -clean_threshold (as given by an evaluation that uses -clean_evaluate_mode)  are realigned to the rest of the alignment. Residues with a score higher than the threshold constitute a rigid framework that cannot be altered.\r\nThe cleaning algorithm is greedy. It starts from the top left segment of low constituency residues and works its way left to right, top to bottom along the alignment. You can require this operation to be carried out for several cycles using the -clean_iterations flag.\r\nThe rationale behind this operation is mostly cosmetic. In order to ensure a decent looking alignment, the gop is set to -20 and the gep to -1. There is no penalty for terminal gaps, and the matrix is blosum62mt.\r\nNote: Gaps are always considered to have a reliability score of 0.\r\n\r\nNote: The use of the cleaning option can result in memory overflow when aligning large sequences.", "batch_bundle_files": false, "hidden": false, "id": 2507, "switch_use__display_text": "switchOnly"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-clean_threshold", "acceptedExtensionList": [], "helptext": "See -clean_aln for details.", "batch_bundle_files": false, "hidden": false, "id": 2508, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-clean_iteration", "acceptedExtensionList": [], "helptext": "See -clean_aln for details.", "batch_bundle_files": false, "hidden": false, "id": 2509, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "t_coffee_fast", "value": "t_coffee_fast"}, {"display": "t_coffee_slow", "value": "t_coffee_slow"}, {"display": "t_coffee_non_extended", "value": "t_coffee_non_extended"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-clean_evaluate_mode", "acceptedExtensionList": [], "helptext": "Indicates the mode used for the evaluation that will indicate the segments that should be realigned.", "batch_bundle_files": false, "hidden": false, "id": 2510, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "", "value": ""}, {"display": "genome", "value": "genome"}, {"display": "quickaln", "value": "quickaln"}, {"display": "dali", "value": "dali"}, {"display": "3dcoffee", "value": "3dcoffee"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "-mode", "acceptedExtensionList": [], "helptext": "Specifies a special mode.", "batch_bundle_files": false, "hidden": false, "id": 2633, "switch_use__display_text": "combined with equals"}], "accepts_input": true, "job_type": "single", "enabled": true, "cpus": "", "fs_backend": "", "queue": "normal", "module": "t_coffee/8.14,intel-cc", "max_memory": null, "inputExtensions": ["*.seq", "*.fna", "*.faa", "*.fa"], "path": "t_coffee", "backend": "", "walltime": "", "description": "T-Coffee is a multiple sequence alignment program."}}