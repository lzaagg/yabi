{"tool": {"outputExtensions": [{"must_be_larger_than": null, "must_exist": false, "file_extension__pattern": "*.clustalw"}], "display_name": "clustalw2", "name": "ebi_clustalw2", "parameter_list": [{"default_value": "http://www.ebi.ac.uk/Tools/services/rest/clustalw2/", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--uri", "acceptedExtensionList": [], "helptext": "The base uri of the EBI web service.", "batch_bundle_files": false, "hidden": true, "id": 3651, "switch_use__display_text": "combined with equals"}, {"default_value": "yabi@ccg.murdoch.edu.au", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--email", "acceptedExtensionList": [], "helptext": "Email address, reqd by EBI.", "batch_bundle_files": false, "hidden": true, "id": 3652, "switch_use__display_text": "combined with equals"}, {"default_value": "out", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "out", "value": "out"}, {"display": "sequence", "value": "sequence"}, {"display": "aln-clustalw", "value": "aln-clustalw"}, {"display": "tree", "value": "tree"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--format", "acceptedExtensionList": [], "helptext": "The output format of the results", "batch_bundle_files": false, "hidden": false, "id": 3653, "switch_use__display_text": "combined with equals"}, {"default_value": "True", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Only the switch will be passed in the argument list.", "switch_use__formatstring": "%(switch)s", "batch_param": false, "switch": "--debug", "acceptedExtensionList": [], "helptext": "Turn on debugging.", "batch_bundle_files": false, "hidden": true, "id": 3654, "switch_use__display_text": "switchOnly"}, {"default_value": "slow", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "slow", "value": "slow"}, {"display": "fast", "value": "fast"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--alignment", "acceptedExtensionList": [], "helptext": "The alignment method used to perform the pairwise alignments used to generate the guide tree.", "batch_bundle_files": false, "hidden": false, "id": 3655, "switch_use__display_text": "combined with equals"}, {"default_value": "protein", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "Protein", "value": "protein"}, {"display": "DNA", "value": "dna"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--type", "acceptedExtensionList": [], "helptext": "Indicates if the sequences to align are protein or nucleotide (DNA/RNA).", "batch_bundle_files": false, "hidden": false, "id": 3656, "switch_use__display_text": "combined with equals"}, {"default_value": "1", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--ktup", "acceptedExtensionList": [], "helptext": "Fast pairwise alignment word size used to find matches between the sequences. Decrease for sensitivity; increase for speed.", "batch_bundle_files": false, "hidden": false, "id": 3657, "switch_use__display_text": "combined with equals"}, {"default_value": "5", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "10", "value": "10"}, {"display": "9", "value": "9"}, {"display": "8", "value": "8"}, {"display": "7", "value": "7"}, {"display": "6", "value": "6"}, {"display": "5", "value": "5"}, {"display": "4", "value": "4"}, {"display": "3", "value": "3"}, {"display": "2", "value": "2"}, {"display": "1", "value": "1"}, {"display": "0", "value": "0"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--window", "acceptedExtensionList": [], "helptext": "Fast pairwise alignment window size for joining word matches. Decrease for speed; increase for sensitivity.", "batch_bundle_files": false, "hidden": false, "id": 3658, "switch_use__display_text": "combined with equals"}, {"default_value": "percent", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "percent", "value": "percent"}, {"display": "absolute", "value": "absolute"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--score", "acceptedExtensionList": [], "helptext": "Fast pairwise alignment score type to output.", "batch_bundle_files": false, "hidden": false, "id": 3659, "switch_use__display_text": "combined with equals"}, {"default_value": "5", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "10", "value": "10"}, {"display": "9", "value": "9"}, {"display": "8", "value": "8"}, {"display": "7", "value": "7"}, {"display": "6", "value": "6"}, {"display": "5", "value": "5"}, {"display": "4", "value": "4"}, {"display": "3", "value": "3"}, {"display": "2", "value": "2"}, {"display": "1", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--topdiags", "acceptedExtensionList": [], "helptext": "Fast pairwise alignment number of match regions are used to create the pairwise alignment. Decrease for speed; increase for sensitivity.", "batch_bundle_files": false, "hidden": false, "id": 3660, "switch_use__display_text": "combined with equals"}, {"default_value": "3", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}, {"display": "10", "value": "10"}, {"display": "25", "value": "25"}, {"display": "50", "value": "50"}, {"display": "100", "value": "100"}, {"display": "250", "value": "250"}, {"display": "500", "value": "500"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--pairgap", "acceptedExtensionList": [], "helptext": "Fast pairwise alignment gap penalty for each gap created.", "batch_bundle_files": false, "hidden": false, "id": 3661, "switch_use__display_text": "combined with equals"}, {"default_value": "gonnet", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "BLOSUM", "value": "blosum"}, {"display": "PAM", "value": "pam"}, {"display": "Gonnet", "value": "gonnet"}, {"display": "ID", "value": "id"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--pwmatrix", "acceptedExtensionList": [], "helptext": "Slow pairwise alignment protein sequence comparison matrix series used to score alignment.", "batch_bundle_files": false, "hidden": false, "id": 3662, "switch_use__display_text": "combined with equals"}, {"default_value": "iub", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "IUB", "value": "iub"}, {"display": "ClustalW", "value": "clustalw"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--pwdnamatrix", "acceptedExtensionList": [], "helptext": "Slow pairwise alignment nucleotide sequence comparison matrix used to score alignment.", "batch_bundle_files": false, "hidden": false, "id": 3663, "switch_use__display_text": "combined with equals"}, {"default_value": "10", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "100", "value": "100"}, {"display": "50", "value": "50"}, {"display": "25", "value": "25"}, {"display": "10", "value": "10"}, {"display": "5", "value": "5"}, {"display": "2", "value": "2"}, {"display": "1", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--pwgapopen", "acceptedExtensionList": [], "helptext": "Slow pairwise alignment score for the first residue in a gap.", "batch_bundle_files": false, "hidden": false, "id": 3664, "switch_use__display_text": "combined with equals"}, {"default_value": "0.1", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "0.05", "value": "0.05"}, {"display": "0.1", "value": "0.1"}, {"display": "0.5", "value": "0.5"}, {"display": "1.0", "value": "1.0"}, {"display": "2.5", "value": "2.5"}, {"display": "5.0", "value": "5.0"}, {"display": "7.5", "value": "7.5"}, {"display": "10.0", "value": "10.0"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--pwgapext", "acceptedExtensionList": [], "helptext": "Slow pairwise alignment score for each additional residue in a gap.", "batch_bundle_files": false, "hidden": false, "id": 3665, "switch_use__display_text": "combined with equals"}, {"default_value": "gonnet", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "BLOSUM", "value": "blosum"}, {"display": "PAM", "value": "pam"}, {"display": "Gonnet", "value": "gonnet"}, {"display": "ID", "value": "id"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--matrix", "acceptedExtensionList": [], "helptext": "Multiple alignment protein sequence comparison matrix series used to score the alignment.", "batch_bundle_files": false, "hidden": false, "id": 3666, "switch_use__display_text": "combined with equals"}, {"default_value": "iub", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "IUB", "value": "iub"}, {"display": "ClustalW", "value": "clustalw"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--dnamatrix", "acceptedExtensionList": [], "helptext": "Multiple alignment nucleotide sequence comparison matrix used to score the alignment.", "batch_bundle_files": false, "hidden": false, "id": 3667, "switch_use__display_text": "combined with equals"}, {"default_value": "10", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "100", "value": "100"}, {"display": "50", "value": "50"}, {"display": "25", "value": "25"}, {"display": "10", "value": "10"}, {"display": "5", "value": "5"}, {"display": "2", "value": "2"}, {"display": "1", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--gapopen", "acceptedExtensionList": [], "helptext": "Multiple alignment penalty for the first residue in a gap.", "batch_bundle_files": false, "hidden": false, "id": 3668, "switch_use__display_text": "combined with equals"}, {"default_value": "false", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "no", "value": "false"}, {"display": "yes", "value": "true"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--noendgaps", "acceptedExtensionList": [], "helptext": "Multiple alignment disable the gap seperation penalty when scoring gaps the the ends of the alignment", "batch_bundle_files": false, "hidden": false, "id": 3669, "switch_use__display_text": "combined with equals"}, {"default_value": "0.20", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "0.05", "value": "0.05"}, {"display": "0.20", "value": "0.20"}, {"display": "0.5", "value": "0.5"}, {"display": "1.0", "value": "1.0"}, {"display": "2.5", "value": "2.5"}, {"display": "5.0", "value": "5.0"}, {"display": "7.5", "value": "7.5"}, {"display": "10.0", "value": "10.0"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--gapext", "acceptedExtensionList": [], "helptext": "Multiple alignment penalty for each additional residue in a gap.", "batch_bundle_files": false, "hidden": false, "id": 3670, "switch_use__display_text": "combined with equals"}, {"default_value": "5", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "10", "value": "10"}, {"display": "9", "value": "9"}, {"display": "8", "value": "8"}, {"display": "7", "value": "7"}, {"display": "6", "value": "6"}, {"display": "5", "value": "5"}, {"display": "4", "value": "4"}, {"display": "3", "value": "3"}, {"display": "2", "value": "2"}, {"display": "1", "value": "1"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--gapdist", "acceptedExtensionList": [], "helptext": "Multiple alignment gaps that are closer together than this distance are penalised.", "batch_bundle_files": false, "hidden": false, "id": 3671, "switch_use__display_text": "combined with equals"}, {"default_value": "none", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "none", "value": "none"}, {"display": "tree", "value": "tree"}, {"display": "alignment", "value": "alignment"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--iteration", "acceptedExtensionList": [], "helptext": "Multiple alignment improvement iteration type", "batch_bundle_files": false, "hidden": false, "id": 3672, "switch_use__display_text": "combined with equals"}, {"default_value": "1", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}, {"display": "6", "value": "6"}, {"display": "7", "value": "7"}, {"display": "8", "value": "8"}, {"display": "9", "value": "9"}, {"display": "10", "value": "10"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--numiter", "acceptedExtensionList": [], "helptext": "Maximum number of iterations to perform", "batch_bundle_files": false, "hidden": false, "id": 3673, "switch_use__display_text": "combined with equals"}, {"default_value": "NJ", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "NJ", "value": "NJ"}, {"display": "UPGMA", "value": "UPGMA"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--clustering", "acceptedExtensionList": [], "helptext": "Clustering type.", "batch_bundle_files": false, "hidden": false, "id": 3674, "switch_use__display_text": "combined with equals"}, {"default_value": "aln1", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "Aln w/numbers", "value": "aln1"}, {"display": "Aln wo/numbers", "value": "aln2"}, {"display": "GCG MSF", "value": "gcg"}, {"display": "PHYLIP", "value": "phylip"}, {"display": "NEXUS", "value": "nexus"}, {"display": "NBRF/PIR", "value": "pir"}, {"display": "GDE", "value": "gde"}, {"display": "Pearson/FASTA", "value": "fasta"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--output", "acceptedExtensionList": [], "helptext": "Format for generated multiple sequence alignment.", "batch_bundle_files": false, "hidden": false, "id": 3675, "switch_use__display_text": "combined with equals"}, {"default_value": "aligned", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "aligned", "value": "aligned"}, {"display": "input", "value": "input"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": false, "switch": "--outorder", "acceptedExtensionList": [], "helptext": "The order in which the sequences appear in the final alignment", "batch_bundle_files": false, "hidden": false, "id": 3676, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "input_file": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": []}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "batch_param": true, "switch": "--sequence", "acceptedExtensionList": ["*.fna", "*.gb", "*.ffn", "*.fasta", "*.fa", "*.pir", "*.faa", "*.embl", "*.frn"], "helptext": "Three or more sequences to be aligned can be entered directly into this form. Sequences can be be in GCG, FASTA, EMBL, GenBank, PIR, NBRF, PHYLIP or UniProtKB/Swiss-Prot format. Partially formatted sequences are not accepted. Adding a return to the end of the sequence may help certain applications understand the input. Note that directly using data from word processors may yield unpredictable results as hidden/control characters may be present.", "batch_bundle_files": false, "hidden": false, "id": 3677, "switch_use__display_text": "combined with equals"}], "accepts_input": true, "job_type": "single", "enabled": true, "cpus": "", "fs_backend": "", "queue": "normal", "module": "python,yabi-tools/andrew", "max_memory": null, "inputExtensions": ["*.fna", "*.gb", "*.ffn", "*.fasta", "*.fa", "*.pir", "*.faa", "*.embl", "*.frn"], "path": "ccg_ebi_rest_run.py", "backend": "", "walltime": "", "description": ""}}