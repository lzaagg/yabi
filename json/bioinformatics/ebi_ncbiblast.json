{"tool": {"outputExtensions": [{"must_be_larger_than": null, "must_exist": false, "file_extension__pattern": "*"}], "display_name": "ebi_ncbiblast", "name": "ebi_ncbiblast", "parameter_list": [{"default_value": "http://www.ebi.ac.uk/Tools/services/rest/ncbiblast/", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": null, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--uri", "acceptedExtensionList": [], "helptext": "The base uri of the EBI web service.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3583, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "out", "value": "out"}, {"display": "sequence", "value": "sequence"}, {"display": "ids", "value": "ids"}, {"display": "xml", "value": "xml"}, {"display": "visual-svg", "value": "visual-svg"}, {"display": "complete-visual-svg", "value": "complete-visual-svg"}, {"display": "visual-png", "value": "visual-png"}, {"display": "complete-visual-png", "value": "complete-visual-png"}, {"display": "visual-jpg", "value": "visual-jpg"}, {"display": "complete-visual-jpg", "value": "complete-visual-jpg"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--format", "acceptedExtensionList": [], "helptext": "The output format of the results.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3584, "switch_use__display_text": "combined with equals"}, {"default_value": "blastp", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "blastp", "value": "blastp"}, {"display": "blastx", "value": "blastx"}, {"display": "blastn", "value": "blastn"}, {"display": "tblastx", "value": "tblastx"}, {"display": "tblastn", "value": "tblastn"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--program", "acceptedExtensionList": [], "helptext": "The BLAST program to be used for the Sequence Similarity Search.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3586, "switch_use__display_text": "combined with equals"}, {"default_value": null, "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "BLOSUM45", "value": "BLOSUM45"}, {"display": "BLOSUM50", "value": "BLOSUM50"}, {"display": "BLOSUM62", "value": "BLOSUM62"}, {"display": "BLOSUM80", "value": "BLOSUM80"}, {"display": "BLOSUM90", "value": "BLOSUM90"}, {"display": "PAM30", "value": "PAM30"}, {"display": "PAM70", "value": "PAM70"}, {"display": "PAM250", "value": "PAM250"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--matrix", "acceptedExtensionList": [], "helptext": "The comparison matrix to be used to score alignments when searching the database", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3587, "switch_use__display_text": "combined with equals"}, {"default_value": "50", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "5", "value": "5"}, {"display": "10", "value": "10"}, {"display": "20", "value": "20"}, {"display": "50 (default)", "value": "50"}, {"display": "100", "value": "100"}, {"display": "150", "value": "150"}, {"display": "200", "value": "200"}, {"display": "250", "value": "250"}, {"display": "500", "value": "500"}, {"display": "750", "value": "750"}, {"display": "1000", "value": "1000"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--alignments", "acceptedExtensionList": [], "helptext": "Maximum number of match alignments reported in the result output.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3588, "switch_use__display_text": "combined with equals"}, {"default_value": "50", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "5", "value": "5"}, {"display": "10", "value": "10"}, {"display": "20", "value": "20"}, {"display": "50 (default)", "value": "50"}, {"display": "100", "value": "100"}, {"display": "150", "value": "150"}, {"display": "200", "value": "200"}, {"display": "250", "value": "250"}, {"display": "500", "value": "500"}, {"display": "750", "value": "750"}, {"display": "1000", "value": "1000"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--scores", "acceptedExtensionList": [], "helptext": "Maximum number of match score summaries reported in the result output.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3589, "switch_use__display_text": "combined with equals"}, {"default_value": "10", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1e-200", "value": "1e-200"}, {"display": "1e-100", "value": "1e-100"}, {"display": "1e-50", "value": "1e-50"}, {"display": "1e-10", "value": "1e-10"}, {"display": "1e-5", "value": "1e-5"}, {"display": "1e-4", "value": "1e-4"}, {"display": "1e-3", "value": "1e-3"}, {"display": "1e-2", "value": "1e-2"}, {"display": "1e-1", "value": "1e-1"}, {"display": "1.0", "value": "1.0"}, {"display": "10 (default)", "value": "10"}, {"display": "100", "value": "100"}, {"display": "1000", "value": "1000"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--exp", "acceptedExtensionList": [], "helptext": "Limits the number of scores and alignments reported based on the expectation value. This is the maximum number of times the match is expected to occur by chance.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3590, "switch_use__display_text": "combined with equals"}, {"default_value": "0", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "0 (default)", "value": "0"}, {"display": "2", "value": "2"}, {"display": "4", "value": "4"}, {"display": "6", "value": "6"}, {"display": "8", "value": "8"}, {"display": "10", "value": "10"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--dropoff", "acceptedExtensionList": [], "helptext": "The amount a score can drop before extension of word hits is halted", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3591, "switch_use__display_text": "combined with equals"}, {"default_value": null, "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "2,-7", "value": "2,-7"}, {"display": "1,-3", "value": "1,-3"}, {"display": "2,-5", "value": "2,-5"}, {"display": "1,-2", "value": "1,-2"}, {"display": "2,-3", "value": "2,-3"}, {"display": "1,-1", "value": "1,-1"}, {"display": "5,-4", "value": "5,-4"}, {"display": "4,-5", "value": "4,-5"}, {"display": "N/A", "value": ""}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--match_scores", "acceptedExtensionList": [], "helptext": "Many nucleotide searches use a simple scoring system that consists of a \"reward\" for a match and a \"penalty\" for a mismatch. The (absolute) reward/penalty ratio should be increased as one looks at more divergent sequences. A ratio of 0.33 (1/-3) is appropriate for sequences that are about 99% conserved; a ratio of 0.5 (1/-2) is best for sequences that are 95% conserved; a ratio of about one (1/-1) is best for sequences that are 75% conserved.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3592, "switch_use__display_text": "combined with equals"}, {"default_value": "-1", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "default", "value": "-1"}, {"display": "0", "value": "0"}, {"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}, {"display": "6", "value": "6"}, {"display": "7", "value": "7"}, {"display": "8", "value": "8"}, {"display": "9", "value": "9"}, {"display": "10", "value": "10"}, {"display": "11", "value": "11"}, {"display": "12", "value": "12"}, {"display": "13", "value": "13"}, {"display": "14", "value": "14"}, {"display": "15", "value": "15"}, {"display": "16", "value": "16"}, {"display": "17", "value": "17"}, {"display": "18", "value": "18"}, {"display": "19", "value": "19"}, {"display": "20", "value": "20"}, {"display": "21", "value": "21"}, {"display": "25", "value": "25"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--gapopen", "acceptedExtensionList": [], "helptext": "Penalty taken away from the score when a gap is created in sequence. Increasing the gap openning penalty will decrease the number of gaps in the final alignment.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3593, "switch_use__display_text": "combined with equals"}, {"default_value": "-1", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "default", "value": "-1"}, {"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}, {"display": "6", "value": "6"}, {"display": "8", "value": "8"}, {"display": "10", "value": "10"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--gapext", "acceptedExtensionList": [], "helptext": "Penalty taken away from the score for each base or residue in the gap. Increasing the gap extension penalty favors short gaps in the final alignment, conversly decreasing the gap extension penalty favors long gaps in the final alignment.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3594, "switch_use__display_text": "combined with equals"}, {"default_value": "F", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "no", "value": "F"}, {"display": "yes", "value": "T"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--filter", "acceptedExtensionList": [], "helptext": "Filter regions of low sequence complexity. This can avoid issues with low complexity sequences where matches are found due to composition rather than meaningful sequence similarity. However in some cases filtering also masks regions of interest and so should be used with caution.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3595, "switch_use__display_text": "combined with equals"}, {"default_value": "START-END", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--seqrange", "acceptedExtensionList": [], "helptext": "Specify a range or section of the input sequence to use in the search. Example: Specifying '34-89' in an input sequence of total length 100, will tell BLAST to only use residues 34 to 89, inclusive.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3596, "switch_use__display_text": "combined with equals"}, {"default_value": "true", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "true", "value": "true"}, {"display": "false", "value": "false"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--gapalign", "acceptedExtensionList": [], "helptext": "This is a true/false setting that tells the program the perform optimised alignments within regions involving gaps. If set to true, the program will perform an alignment using gaps. Otherwise, if it is set to false, it will report only individual HSP where two sequence match each other, and thus will not produce alignments with gaps.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3597, "switch_use__display_text": "combined with equals"}, {"default_value": "0", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "pairwise", "value": "0"}, {"display": "M/S identities", "value": "1"}, {"display": "M/S non-identities", "value": "2"}, {"display": "Flat identities", "value": "3"}, {"display": "Flat non-identities", "value": "4"}, {"display": "BLASTXML", "value": "7"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--align", "acceptedExtensionList": [], "helptext": "Formating for the alignments", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3598, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "PROTEIN", "value": "protein"}, {"display": "DNA/RNA", "value": "dna"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--stype", "acceptedExtensionList": [], "helptext": "Indicates if the sequence is protein or DNA/RNA.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3599, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--sequence", "acceptedExtensionList": ["*.fna", "*.ffn", "*.fasta", "*.fa", "*.faa", "*.fastq", "*.frn"], "helptext": "Sequence", "batch_bundle_files": false, "file_assignment": "batch", "hidden": false, "id": 3600, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "UniProt Knowledgebase", "value": "uniprotkb"}, {"display": "UniProtKB/Swiss-Prot", "value": "uniprotkb_swissprot"}, {"display": "UniProtKB/Swiss-Prot isoforms", "value": "uniprotkb_swissprotsv"}, {"display": "UniProtKB/TrEMBL", "value": "uniprotkb_trembl"}, {"display": "UniProtKB Archaea", "value": "uniprotkb_archaea"}, {"display": "UniProtKB Arthropoda", "value": "uniprotkb_arthropoda"}, {"display": "UniProtKB Bacteria", "value": "uniprotkb_bacteria"}, {"display": "UniProtKB Complete Microbial Proteomes", "value": "uniprotkb_complete_microbial_proteomes"}, {"display": "UniProtKB Eukaryota", "value": "uniprotkb_eukaryota"}, {"display": "UniProtKB Fungi", "value": "uniprotkb_fungi"}, {"display": "UniProtKB Human", "value": "uniprotkb_human"}, {"display": "UniProtKB Mammals", "value": "uniprotkb_mammals"}, {"display": "UniProtKB Nematoda", "value": "uniprotkb_nematoda"}, {"display": "UniProtKB PDB", "value": "uniprotkb_pdb"}, {"display": "UniProtKB Rodents", "value": "uniprotkb_rodents"}, {"display": "UniProtKB Vertebrates", "value": "uniprotkb_vertebrates"}, {"display": "UniProtKB Viridiplantae", "value": "uniprotkb_viridiplantae"}, {"display": "UniProtKB Viruses", "value": "uniprotkb_viruses"}, {"display": "UniProt Clusters 100%", "value": "uniref100"}, {"display": "UniProt Clusters 100% (SEG filtered)", "value": "uniref100_seg"}, {"display": "UniProt Clusters 90%", "value": "uniref90"}, {"display": "UniProt Clusters 50%", "value": "uniref50"}, {"display": "EPO Patent Protein Sequences", "value": "epop"}, {"display": "JPO Patent Protein Sequences", "value": "jpop"}, {"display": "KIPO Patent Protein Sequences", "value": "kpop"}, {"display": "USPTO Patent Protein Sequences", "value": "uspop"}, {"display": "NR Patent Proteins Level-1", "value": "nrpl1"}, {"display": "NR Patent Proteins Level-2", "value": "nrpl2"}, {"display": "Protein Structure Sequences", "value": "pdb"}, {"display": "Structural Genomics Targets", "value": "sgt"}, {"display": "UniProt Archive", "value": "uniparc"}, {"display": "International Protein Index", "value": "ipi"}, {"display": "IntAct", "value": "intact"}, {"display": "IMGT/HLA", "value": "imgthlap"}, {"display": "IPD-KIR", "value": "ipdkirp"}, {"display": "EMBL Release", "value": "em_rel"}, {"display": "EMBL Environmental", "value": "em_rel_env"}, {"display": "EMBL EST Environmental", "value": "em_rel_est_env"}, {"display": "EMBL GSS Environmental", "value": "em_rel_gss_env"}, {"display": "EMBL HTC Environmental", "value": "em_rel_htc_env"}, {"display": "EMBL HTG Environmental", "value": "em_rel_htg_env"}, {"display": "EMBL Patent Environmental", "value": "em_rel_pat_env"}, {"display": "EMBL Standard Environmental", "value": "em_rel_std_env"}, {"display": "EMBL Fungi", "value": "em_rel_fun"}, {"display": "EMBL EST Fungi", "value": "em_rel_est_fun"}, {"display": "EMBL GSS Fungi", "value": "em_rel_gss_fun"}, {"display": "EMBL HTC Fungi", "value": "em_rel_htc_fun"}, {"display": "EMBL HTG Fungi", "value": "em_rel_htg_fun"}, {"display": "EMBL Patent Fungi", "value": "em_rel_pat_fun"}, {"display": "EMBL Standard Fungi", "value": "em_rel_std_fun"}, {"display": "EMBL STS Fungi", "value": "em_rel_sts_fun"}, {"display": "EMBL TSA Fungi", "value": "em_rel_tsa_fun"}, {"display": "EMBL Human", "value": "em_rel_hum"}, {"display": "EMBL EST Human", "value": "em_rel_est_hum"}, {"display": "EMBL GSS Human", "value": "em_rel_gss_hum"}, {"display": "EMBL HTC Human", "value": "em_rel_htc_hum"}, {"display": "EMBL HTG Human", "value": "em_rel_htg_hum"}, {"display": "EMBL Patent Human", "value": "em_rel_pat_hum"}, {"display": "EMBL Standard Human", "value": "em_rel_std_hum"}, {"display": "EMBL STS Human", "value": "em_rel_sts_hum"}, {"display": "EMBL Invertebrate", "value": "em_rel_inv"}, {"display": "EMBL EST Invertebrate", "value": "em_rel_est_inv"}, {"display": "EMBL GSS Invertebrate", "value": "em_rel_gss_inv"}, {"display": "EMBL HTC Invertebrate", "value": "em_rel_htc_inv"}, {"display": "EMBL HTG Invertebrate", "value": "em_rel_htg_inv"}, {"display": "EMBL Patent Invertebrate", "value": "em_rel_pat_inv"}, {"display": "EMBL Standard Invertebrate", "value": "em_rel_std_inv"}, {"display": "EMBL STS Invertebrate", "value": "em_rel_sts_inv"}, {"display": "EMBL TSA Invertebrate", "value": "em_rel_tsa_inv"}, {"display": "EMBL Mammal", "value": "em_rel_mam"}, {"display": "EMBL EST Mammal", "value": "em_rel_est_mam"}, {"display": "EMBL GSS Mammal", "value": "em_rel_gss_mam"}, {"display": "EMBL HTC Mammal", "value": "em_rel_htc_mam"}, {"display": "EMBL HTG Mammal", "value": "em_rel_htg_mam"}, {"display": "EMBL Patent Mammal", "value": "em_rel_pat_mam"}, {"display": "EMBL Standard Mammal", "value": "em_rel_std_mam"}, {"display": "EMBL STS Mammal", "value": "em_rel_sts_mam"}, {"display": "EMBL TSA Mammal", "value": "em_rel_tsa_mam"}, {"display": "EMBL Mouse", "value": "em_rel_mus"}, {"display": "EMBL EST Mouse", "value": "em_rel_est_mus"}, {"display": "EMBL GSS Mouse", "value": "em_rel_gss_mus"}, {"display": "EMBL HTC Mouse", "value": "em_rel_htc_mus"}, {"display": "EMBL HTG Mouse", "value": "em_rel_htg_mus"}, {"display": "EMBL Patent Mouse", "value": "em_rel_pat_mus"}, {"display": "EMBL Standard Mouse", "value": "em_rel_std_mus"}, {"display": "EMBL STS Mouse", "value": "em_rel_sts_mus"}, {"display": "EMBL Phage", "value": "em_rel_phg"}, {"display": "EMBL GSS Phage", "value": "em_rel_gss_phg"}, {"display": "EMBL HTG Phage", "value": "em_rel_htg_phg"}, {"display": "EMBL Patent Phage", "value": "em_rel_pat_phg"}, {"display": "EMBL Standard Phage", "value": "em_rel_std_phg"}, {"display": "EMBL Plant", "value": "em_rel_pln"}, {"display": "EMBL EST Plant", "value": "em_rel_est_pln"}, {"display": "EMBL GSS Plant", "value": "em_rel_gss_pln"}, {"display": "EMBL HTC Plant", "value": "em_rel_htc_pln"}, {"display": "EMBL HTG Plant", "value": "em_rel_htg_pln"}, {"display": "EMBL Patent Plant", "value": "em_rel_pat_pln"}, {"display": "EMBL Standard Plant", "value": "em_rel_std_pln"}, {"display": "EMBL STS Plant", "value": "em_rel_sts_pln"}, {"display": "EMBL TSA Plant", "value": "em_rel_tsa_pln"}, {"display": "EMBL Prokaryote", "value": "em_rel_pro"}, {"display": "EMBL EST Prokaryote", "value": "em_rel_est_pro"}, {"display": "EMBL GSS Prokaryote", "value": "em_rel_gss_pro"}, {"display": "EMBL HTC Prokaryote", "value": "em_rel_htc_pro"}, {"display": "EMBL HTG Prokaryote", "value": "em_rel_htg_pro"}, {"display": "EMBL Patent Prokaryote", "value": "em_rel_pat_pro"}, {"display": "EMBL Standard Prokaryote", "value": "em_rel_std_pro"}, {"display": "EMBL STS Prokaryote", "value": "em_rel_sts_pro"}, {"display": "EMBL Rodent", "value": "em_rel_rod"}, {"display": "EMBL EST Rodent", "value": "em_rel_est_rod"}, {"display": "EMBL GSS Rodent", "value": "em_rel_gss_rod"}, {"display": "EMBL HTC Rodent", "value": "em_rel_htc_rod"}, {"display": "EMBL HTG Rodent", "value": "em_rel_htg_rod"}, {"display": "EMBL Patent Rodent", "value": "em_rel_pat_rod"}, {"display": "EMBL Standard Rodent", "value": "em_rel_std_rod"}, {"display": "EMBL STS Rodent", "value": "em_rel_sts_rod"}, {"display": "EMBL Synthetic", "value": "em_rel_syn"}, {"display": "EMBL Patent Synthetic", "value": "em_rel_pat_syn"}, {"display": "EMBL Standard Synthetic", "value": "em_rel_std_syn"}, {"display": "EMBL Transgenic", "value": "em_rel_tgn"}, {"display": "EMBL Standard Transgenic", "value": "em_rel_std_tgn"}, {"display": "EMBL GSS Transgenic", "value": "em_rel_gss_tgn"}, {"display": "EMBL Unclassified", "value": "em_rel_unc"}, {"display": "EMBL EST Unclassified", "value": "em_rel_est_unc"}, {"display": "EMBL Patent Unclassified", "value": "em_rel_pat_unc"}, {"display": "EMBL Standard Unclassified", "value": "em_rel_std_unc"}, {"display": "EMBL Viral", "value": "em_rel_vrl"}, {"display": "EMBL EST Viral", "value": "em_rel_est_vrl"}, {"display": "EMBL GSS Viral", "value": "em_rel_gss_vrl"}, {"display": "EMBL HTG Viral", "value": "em_rel_htg_vrl"}, {"display": "EMBL Patent Viral", "value": "em_rel_pat_vrl"}, {"display": "EMBL Standard Viral", "value": "em_rel_std_vrl"}, {"display": "EMBL Vertebrate", "value": "em_rel_vrt"}, {"display": "EMBL EST Vertebrate", "value": "em_rel_est_vrt"}, {"display": "EMBL GSS Vertebrate", "value": "em_rel_gss_vrt"}, {"display": "EMBL HTC Vertebrate", "value": "em_rel_htc_vrt"}, {"display": "EMBL HTG Vertebrate", "value": "em_rel_htg_vrt"}, {"display": "EMBL Patent Vertebrate", "value": "em_rel_pat_vrt"}, {"display": "EMBL Standard Vertebrate", "value": "em_rel_std_vrt"}, {"display": "EMBL STS Vertebrate", "value": "em_rel_sts_vrt"}, {"display": "EMBL TSA Vertebrate", "value": "em_rel_tsa_vrt"}, {"display": "EMBL Updates", "value": "emnew"}, {"display": "EMBL Coding Sequence", "value": "emblcds"}, {"display": "EMBL Expressed Sequence Tag", "value": "em_rel_est"}, {"display": "EMBL Genome Survey Sequence", "value": "em_rel_gss"}, {"display": "EMBL High Throughput cDNA", "value": "em_rel_htc"}, {"display": "EMBL High Throughput Genome", "value": "em_rel_htg"}, {"display": "EMBL Patent", "value": "em_rel_pat"}, {"display": "EMBL Standard", "value": "em_rel_std"}, {"display": "EMBL Sequence Tagged Site", "value": "em_rel_sts"}, {"display": "EMBL Transcriptome Shotgun Assembly", "value": "em_rel_tsa"}, {"display": "EMBL Release and Updates", "value": "emall"}, {"display": "EMBL Vectors", "value": "emvec"}, {"display": "IMGT/LIGM-DB", "value": "imgtligm"}, {"display": "IMGT/HLA", "value": "imgthla"}, {"display": "IPD-KIR", "value": "ipdkir"}, {"display": "HGVBASE", "value": "hgvbase"}, {"display": "NR Patent DNAs Level-1", "value": "nrnl1"}, {"display": "NR Patent DNAs Level-2", "value": "nrnl2"}, {"display": "emvec", "value": "emvec"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--database", "acceptedExtensionList": [], "helptext": "Database", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3601, "switch_use__display_text": "combined with equals"}, {"default_value": "bls", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--extension", "acceptedExtensionList": [], "helptext": "Extension here will override .txt as the extension on text results.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3698, "switch_use__display_text": "combined with equals"}], "accepts_input": true, "job_type": "single", "enabled": true, "cpus": "", "fs_backend": "nullbackend", "queue": "normal", "module": "python,yabi-tools/andrew", "max_memory": null, "inputExtensions": ["*.fna", "*.ffn", "*.fasta", "*.fa", "*.faa", "*.fastq", "*.frn"], "path": "ccg_ebi_rest_run.py", "backend": "nullbackend", "walltime": "", "description": ""}}