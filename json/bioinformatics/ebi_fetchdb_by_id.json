{"tool": {"outputExtensions": [{"must_be_larger_than": null, "must_exist": false, "file_extension__pattern": "*.fa"}], "display_name": "fetchdb_by_id", "name": "ebi_fetchdb_by_id", "parameter_list": [{"default_value": "", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": null, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated by a space.", "switch_use__formatstring": "%(switch)s %(value)s", "batch_param": false, "switch": "-q", "acceptedExtensionList": [], "helptext": "Comma separated list of identifiers. ", "batch_bundle_files": false, "hidden": false, "id": 3872, "switch_use__display_text": "both"}, {"default_value": "sequences.fa", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": true, "possible_values": null, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated by a space.", "switch_use__formatstring": "%(switch)s %(value)s", "batch_param": false, "switch": "-o", "acceptedExtensionList": [], "helptext": "The file containing the requested sequences.", "batch_bundle_files": false, "hidden": false, "id": 3873, "switch_use__display_text": "both"}, {"default_value": "fasta", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": null, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated by a space.", "switch_use__formatstring": "%(switch)s %(value)s", "batch_param": false, "switch": "-f", "acceptedExtensionList": [], "helptext": "The output format. Leave this as fasta.", "batch_bundle_files": false, "hidden": true, "id": 3874, "switch_use__display_text": "both"}, {"default_value": "embl", "mandatory": true, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "\ufeffEDAM", "value": "edam"}, {"display": "EMBL-Bank", "value": "embl"}, {"display": "EMBLCDS", "value": "emblcds"}, {"display": "EMBLCON", "value": "emblcon"}, {"display": "EMBLCONEXP", "value": "emblconexp"}, {"display": "EMBL-SVA", "value": "emblsva"}, {"display": "Ensembl Gene", "value": "ensemblgene"}, {"display": "Ensembl Transcript", "value": "ensembltranscript"}, {"display": "EPO Proteins", "value": "epo_prt"}, {"display": "GenomeReviews", "value": "genomereviews"}, {"display": "HGNC", "value": "hgnc"}, {"display": "HGVBase", "value": "hgvbase"}, {"display": "IMGT/HLA", "value": "imgthla"}, {"display": "IMGT/LIGM-DB", "value": "imgtligm"}, {"display": "InterPro", "value": "interpro"}, {"display": "IPD-KIR", "value": "ipdkir"}, {"display": "IPI", "value": "ipi"}, {"display": "IPRMC", "value": "iprmc"}, {"display": "IPRMC UniParc", "value": "iprmcuniparc"}, {"display": "JPO Proteins", "value": "jpo_prt"}, {"display": "KIPO Proteins", "value": "kipo_prt"}, {"display": "MEDLINE", "value": "medline"}, {"display": "Patent DNA NRL1", "value": "nrnl1"}, {"display": "Patent DNA NRL2", "value": "nrnl2"}, {"display": "Patent Protein NRL1", "value": "nrpl1"}, {"display": "Patent Protein NRL2", "value": "nrpl2"}, {"display": "PDB", "value": "pdb"}, {"display": "RefSeq (nucleotide)", "value": "refseqn"}, {"display": "RefSeq (protein)", "value": "refseqp"}, {"display": "RESID", "value": "resid"}, {"display": "SGT", "value": "sgt"}, {"display": "Taxonomy", "value": "taxonomy"}, {"display": "Trace Archive", "value": "tracearchive"}, {"display": "UniParc", "value": "uniparc"}, {"display": "UniProtKB", "value": "uniprotkb"}, {"display": "UniRef100", "value": "uniref100"}, {"display": "UniRef50", "value": "uniref50"}, {"display": "UniRef90", "value": "uniref90"}, {"display": "UniSave", "value": "unisave"}, {"display": "USPTO Proteins", "value": "uspto_prt"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated by a space.", "switch_use__formatstring": "%(switch)s %(value)s", "batch_param": false, "switch": "-d", "acceptedExtensionList": [], "helptext": "Database to fetch sequences from.", "batch_bundle_files": false, "hidden": false, "id": 3875, "switch_use__display_text": "both"}, {"default_value": "On", "mandatory": false, "input_file": false, "use_output_filename__switch": null, "output_file": false, "possible_values": null, "rank": null, "switch_use__description": "Only the switch will be passed in the argument list.", "switch_use__formatstring": "%(switch)s", "batch_param": false, "switch": "-s", "acceptedExtensionList": [], "helptext": "Strip leading prefixes from identifiers.", "batch_bundle_files": false, "hidden": false, "id": 3876, "switch_use__display_text": "switchOnly"}], "accepts_input": false, "job_type": "single", "enabled": true, "cpus": "", "fs_backend": "", "queue": "normal", "module": "python,yabi-tools/andrew", "max_memory": null, "inputExtensions": [], "path": "ccg_ebi_dbfetch.py", "backend": "", "walltime": "", "description": "The dbfetch services provide access to entries from various up-to-date biological databases using entry identifiers or accession numbers."}}