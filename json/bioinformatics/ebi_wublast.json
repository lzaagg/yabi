{"tool": {"outputExtensions": [{"must_be_larger_than": null, "must_exist": false, "file_extension__pattern": "*"}], "display_name": "ebi_wublast", "name": "ebi_wublast", "parameter_list": [{"default_value": "http://www.ebi.ac.uk/Tools/services/rest/wublast/", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": null, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--uri", "acceptedExtensionList": [], "helptext": "The base uri of the EBI web service.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3678, "switch_use__display_text": "combined with equals"}, {"default_value": "out", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "out", "value": "out"}, {"display": "sequence", "value": "sequence"}, {"display": "ids", "value": "ids"}, {"display": "xml", "value": "xml"}, {"display": "visual-svg", "value": "visual-svg"}, {"display": "complete-visual-svg", "value": "complete-visual-svg"}, {"display": "visual-png", "value": "visual-png"}, {"display": "complete-visual-png", "value": "complete-visual-png"}, {"display": "visual-jpg", "value": "visual-jpg"}, {"display": "complete-visual-jpg", "value": "complete-visual-jpg"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--format", "acceptedExtensionList": [], "helptext": "The output format of the results", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3680, "switch_use__display_text": "combined with equals"}, {"default_value": "blastn", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "blastp", "value": "blastp"}, {"display": "blastx", "value": "blastx"}, {"display": "blastn", "value": "blastn"}, {"display": "tblastx", "value": "tblastx"}, {"display": "tblastn", "value": "tblastn"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--program", "acceptedExtensionList": [], "helptext": "The BLAST program to be used for the Sequence Similarity Search.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3682, "switch_use__display_text": "combined with equals"}, {"default_value": "10", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1e-200", "value": "1e-200"}, {"display": "1e-100", "value": "1e-100"}, {"display": "1e-50", "value": "1e-50"}, {"display": "1e-10", "value": "1e-10"}, {"display": "1e-5", "value": "1e-5"}, {"display": "1e-4", "value": "1e-4"}, {"display": "1e-3", "value": "1e-3"}, {"display": "1e-2", "value": "1e-2"}, {"display": "1e-1", "value": "1e-1"}, {"display": "1.0", "value": "1.0"}, {"display": "10 (default)", "value": "10"}, {"display": "100", "value": "100"}, {"display": "1000", "value": "1000"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--exp", "acceptedExtensionList": [], "helptext": "Limits the number of scores and alignments reported based on the expectation value. This is the maximum number of times the match is expected to occur by chance.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3683, "switch_use__display_text": "combined with equals"}, {"default_value": "50", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "5", "value": "5"}, {"display": "10", "value": "10"}, {"display": "20", "value": "20"}, {"display": "50 (default)", "value": "50"}, {"display": "100", "value": "100"}, {"display": "150", "value": "150"}, {"display": "200", "value": "200"}, {"display": "250", "value": "250"}, {"display": "300", "value": "300"}, {"display": "350", "value": "350"}, {"display": "400", "value": "400"}, {"display": "450", "value": "450"}, {"display": "500", "value": "500"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--alignments", "acceptedExtensionList": [], "helptext": "Maximum number of match alignments reported in the result output.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3684, "switch_use__display_text": "combined with equals"}, {"default_value": "50", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "5", "value": "5"}, {"display": "10", "value": "10"}, {"display": "20", "value": "20"}, {"display": "50 (default)", "value": "50"}, {"display": "100", "value": "100"}, {"display": "150", "value": "150"}, {"display": "200", "value": "200"}, {"display": "250", "value": "250"}, {"display": "300", "value": "300"}, {"display": "350", "value": "350"}, {"display": "400", "value": "400"}, {"display": "450", "value": "450"}, {"display": "500", "value": "500"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--scores", "acceptedExtensionList": [], "helptext": "Maximum number of match score summaries reported in the result output.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3685, "switch_use__display_text": "combined with equals"}, {"default_value": "1", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "pairwise", "value": "1"}, {"display": "BLASTXML", "value": "7"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--align", "acceptedExtensionList": [], "helptext": "Formating for the alignments", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3686, "switch_use__display_text": "combined with equals"}, {"default_value": "internal", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "internal (default)", "value": "internal"}, {"display": "identity", "value": "identity"}, {"display": "pupy", "value": "pupy"}, {"display": "blosum62", "value": "blosum62"}, {"display": "blosum30", "value": "blosum30"}, {"display": "blosum35", "value": "blosum35"}, {"display": "blosum40", "value": "blosum40"}, {"display": "blosum45", "value": "blosum45"}, {"display": "blosum50", "value": "blosum50"}, {"display": "blosum65", "value": "blosum65"}, {"display": "blosum70", "value": "blosum70"}, {"display": "blosum75", "value": "blosum75"}, {"display": "blosum80", "value": "blosum80"}, {"display": "blosum85", "value": "blosum85"}, {"display": "blosum90", "value": "blosum90"}, {"display": "blosum100", "value": "blosum100"}, {"display": "GONNET", "value": "GONNET"}, {"display": "pam10", "value": "pam10"}, {"display": "pam20", "value": "pam20"}, {"display": "pam30", "value": "pam30"}, {"display": "pam40", "value": "pam40"}, {"display": "pam50", "value": "pam50"}, {"display": "pam60", "value": "pam60"}, {"display": "pam70", "value": "pam70"}, {"display": "pam80", "value": "pam80"}, {"display": "pam90", "value": "pam90"}, {"display": "pam100", "value": "pam100"}, {"display": "pam110", "value": "pam110"}, {"display": "pam120", "value": "pam120"}, {"display": "pam130", "value": "pam130"}, {"display": "pam140", "value": "pam140"}, {"display": "pam150", "value": "pam150"}, {"display": "pam160", "value": "pam160"}, {"display": "pam170", "value": "pam170"}, {"display": "pam180", "value": "pam180"}, {"display": "pam190", "value": "pam190"}, {"display": "pam200", "value": "pam200"}, {"display": "pam210", "value": "pam210"}, {"display": "pam220", "value": "pam220"}, {"display": "pam230", "value": "pam230"}, {"display": "pam240", "value": "pam240"}, {"display": "pam250", "value": "pam250"}, {"display": "pam260", "value": "pam260"}, {"display": "pam270", "value": "pam270"}, {"display": "pam280", "value": "pam280"}, {"display": "pam290", "value": "pam290"}, {"display": "pam300", "value": "pam300"}, {"display": "pam310", "value": "pam310"}, {"display": "pam320", "value": "pam320"}, {"display": "pam330", "value": "pam330"}, {"display": "pam340", "value": "pam340"}, {"display": "pam350", "value": "pam350"}, {"display": "pam360", "value": "pam360"}, {"display": "pam370", "value": "pam370"}, {"display": "pam380", "value": "pam380"}, {"display": "pam390", "value": "pam390"}, {"display": "pam400", "value": "pam400"}, {"display": "pam410", "value": "pam410"}, {"display": "pam420", "value": "pam420"}, {"display": "pam430", "value": "pam430"}, {"display": "pam440", "value": "pam440"}, {"display": "pam450", "value": "pam450"}, {"display": "pam460", "value": "pam460"}, {"display": "pam470", "value": "pam470"}, {"display": "pam480", "value": "pam480"}, {"display": "pam490", "value": "pam490"}, {"display": "pam500", "value": "pam500"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--matrix", "acceptedExtensionList": [], "helptext": "The comparison matrix to be used to score alignments when searching the database", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3687, "switch_use__display_text": "combined with equals"}, {"default_value": "sump", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "sump", "value": "sump"}, {"display": "poisson", "value": "poisson"}, {"display": "kap", "value": "kap"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--stats", "acceptedExtensionList": [], "helptext": "The statistical model to use for assessing the significance of the hits found", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3688, "switch_use__display_text": "combined with equals"}, {"default_value": "normal", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "very low", "value": "vlow"}, {"display": "low", "value": "low"}, {"display": "medium", "value": "medium"}, {"display": "normal", "value": "normal"}, {"display": "high", "value": "high"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--sensitivity", "acceptedExtensionList": [], "helptext": "Increasing the sensitivity will increase the length of the search (longer execution times + more memory required), but increase the specificity of the results. A decrease will significantly speed up the search but decrease the sensitivity of the results.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3689, "switch_use__display_text": "combined with equals"}, {"default_value": "1", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "1", "value": "1"}, {"display": "2", "value": "2"}, {"display": "3", "value": "3"}, {"display": "4", "value": "4"}, {"display": "5", "value": "5"}, {"display": "50", "value": "50"}, {"display": "100", "value": "100"}, {"display": "1000", "value": "1000"}, {"display": "All", "value": "all"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--topcombon", "acceptedExtensionList": [], "helptext": "Topcombo processing causes consistent sets of HSPs to be reported, such that any given HSP is allowed to be a member of just one set. Often, one wishes to see just the best set of consistent HSPs without any other \"contaminants\" in the output. This would be topcomboN=1.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3690, "switch_use__display_text": "combined with equals"}, {"default_value": null, "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "no", "value": "false"}, {"display": "yes", "value": "true"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--viewfilter", "acceptedExtensionList": [], "helptext": "When set to \"yes\" the query sequence used for the search, post filtering, is shown in the output file.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3691, "switch_use__display_text": "combined with equals"}, {"default_value": null, "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "none", "value": "none"}, {"display": "seg", "value": "seg"}, {"display": "xnu", "value": "xnu"}, {"display": "seg+xnu", "value": "seg+xnu"}, {"display": "dust", "value": "dust"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--filter", "acceptedExtensionList": [], "helptext": "Filter regions of low sequence complexity. This can avoid issues with low complexity sequences where matches are found due to composition rather than meaningful sequence similarity. However in some cases filtering also masks regions of interest and so should be used with caution.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3692, "switch_use__display_text": "combined with equals"}, {"default_value": null, "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "none", "value": "none"}, {"display": "both", "value": "both"}, {"display": "top", "value": "top"}, {"display": "bottom", "value": "bottom"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--strand", "acceptedExtensionList": [], "helptext": "For nucleotide sequences specify the sequence strand to be used for the search. By default both upper (provided) and lower (reverse complement of provided) strands are used, for single stranded sequences searching with only the upper or lower strand may provide better results.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3693, "switch_use__display_text": "combined with equals"}, {"default_value": "pvalue", "mandatory": false, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "pvalue", "value": "pvalue"}, {"display": "count", "value": "count"}, {"display": "highscore", "value": "highscore"}, {"display": "totalscore", "value": "totalscore"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--sort", "acceptedExtensionList": [], "helptext": "Sorts the scores in the score list of the output file.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3694, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "PROTEIN", "value": "protein"}, {"display": "DNA/RNA", "value": "dna"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--stype", "acceptedExtensionList": [], "helptext": "Indicates if the sequence is protein or DNA/RNA.", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3695, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": "", "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--sequence", "acceptedExtensionList": ["*.fna", "*.ffn", "*.fasta", "*.fa", "*.faa", "*.frn"], "helptext": "Sequence", "batch_bundle_files": false, "file_assignment": "batch", "hidden": false, "id": 3696, "switch_use__display_text": "combined with equals"}, {"default_value": "", "mandatory": true, "use_output_filename__switch": null, "output_file": false, "possible_values": {"value": [{"display": "UniProt Knowledgebase", "value": "uniprotkb"}, {"display": "UniProtKB/Swiss-Prot", "value": "uniprotkb_swissprot"}, {"display": "UniProtKB/Swiss-Prot isoforms", "value": "uniprotkb_swissprotsv"}, {"display": "UniProtKB/TrEMBL", "value": "uniprotkb_trembl"}, {"display": "UniProtKB Archaea", "value": "uniprotkb_archaea"}, {"display": "UniProtKB Arthropoda", "value": "uniprotkb_arthropoda"}, {"display": "UniProtKB Bacteria", "value": "uniprotkb_bacteria"}, {"display": "UniProtKB Complete Microbial Proteomes", "value": "uniprotkb_complete_microbial_proteomes"}, {"display": "UniProtKB Eukaryota", "value": "uniprotkb_eukaryota"}, {"display": "UniProtKB Fungi", "value": "uniprotkb_fungi"}, {"display": "UniProtKB Human", "value": "uniprotkb_human"}, {"display": "UniProtKB Mammals", "value": "uniprotkb_mammals"}, {"display": "UniProtKB Nematoda", "value": "uniprotkb_nematoda"}, {"display": "UniProtKB PDB", "value": "uniprotkb_pdb"}, {"display": "UniProtKB Rodents", "value": "uniprotkb_rodents"}, {"display": "UniProtKB Vertebrates", "value": "uniprotkb_vertebrates"}, {"display": "UniProtKB Viridiplantae", "value": "uniprotkb_viridiplantae"}, {"display": "UniProtKB Viruses", "value": "uniprotkb_viruses"}, {"display": "UniProt Clusters 100%", "value": "uniref100"}, {"display": "UniProt Clusters 100% (SEG filtered)", "value": "uniref100_seg"}, {"display": "UniProt Clusters 90%", "value": "uniref90"}, {"display": "UniProt Clusters 50%", "value": "uniref50"}, {"display": "EPO Patent Protein Sequences", "value": "epop"}, {"display": "JPO Patent Protein Sequences", "value": "jpop"}, {"display": "KIPO Patent Protein Sequences", "value": "kpop"}, {"display": "USPTO Patent Protein Sequences", "value": "uspop"}, {"display": "NR Patent Proteins Level-1", "value": "nrpl1"}, {"display": "NR Patent Proteins Level-2", "value": "nrpl2"}, {"display": "Protein Structure Sequences", "value": "pdb"}, {"display": "Structural Genomics Targets", "value": "sgt"}, {"display": "UniProt Archive", "value": "uniparc"}, {"display": "International Protein Index", "value": "ipi"}, {"display": "IntAct", "value": "intact"}, {"display": "IMGT/HLA", "value": "imgthlap"}, {"display": "IPD-KIR", "value": "ipdkirp"}, {"display": "Peptides", "value": "apdb"}, {"display": "Splice Genes", "value": "altsgen"}, {"display": "Splice Patterns", "value": "altsiso"}, {"display": "AEDB exons", "value": "aedb"}, {"display": "EMBL Release", "value": "em_rel"}, {"display": "EMBL Environmental", "value": "em_rel_env"}, {"display": "EMBL EST Environmental", "value": "em_rel_est_env"}, {"display": "EMBL GSS Environmental", "value": "em_rel_gss_env"}, {"display": "EMBL HTC Environmental", "value": "em_rel_htc_env"}, {"display": "EMBL HTG Environmental", "value": "em_rel_htg_env"}, {"display": "EMBL Patent Environmental", "value": "em_rel_pat_env"}, {"display": "EMBL Standard Environmental", "value": "em_rel_std_env"}, {"display": "EMBL Fungi", "value": "em_rel_fun"}, {"display": "EMBL EST Fungi", "value": "em_rel_est_fun"}, {"display": "EMBL GSS Fungi", "value": "em_rel_gss_fun"}, {"display": "EMBL HTC Fungi", "value": "em_rel_htc_fun"}, {"display": "EMBL HTG Fungi", "value": "em_rel_htg_fun"}, {"display": "EMBL Patent Fungi", "value": "em_rel_pat_fun"}, {"display": "EMBL Standard Fungi", "value": "em_rel_std_fun"}, {"display": "EMBL STS Fungi", "value": "em_rel_sts_fun"}, {"display": "EMBL TSA Fungi", "value": "em_rel_tsa_fun"}, {"display": "EMBL Human", "value": "em_rel_hum"}, {"display": "EMBL EST Human", "value": "em_rel_est_hum"}, {"display": "EMBL GSS Human", "value": "em_rel_gss_hum"}, {"display": "EMBL HTC Human", "value": "em_rel_htc_hum"}, {"display": "EMBL HTG Human", "value": "em_rel_htg_hum"}, {"display": "EMBL Patent Human", "value": "em_rel_pat_hum"}, {"display": "EMBL Standard Human", "value": "em_rel_std_hum"}, {"display": "EMBL STS Human", "value": "em_rel_sts_hum"}, {"display": "EMBL Invertebrate", "value": "em_rel_inv"}, {"display": "EMBL EST Invertebrate", "value": "em_rel_est_inv"}, {"display": "EMBL GSS Invertebrate", "value": "em_rel_gss_inv"}, {"display": "EMBL HTC Invertebrate", "value": "em_rel_htc_inv"}, {"display": "EMBL HTG Invertebrate", "value": "em_rel_htg_inv"}, {"display": "EMBL Patent Invertebrate", "value": "em_rel_pat_inv"}, {"display": "EMBL Standard Invertebrate", "value": "em_rel_std_inv"}, {"display": "EMBL STS Invertebrate", "value": "em_rel_sts_inv"}, {"display": "EMBL TSA Invertebrate", "value": "em_rel_tsa_inv"}, {"display": "EMBL Mammal", "value": "em_rel_mam"}, {"display": "EMBL EST Mammal", "value": "em_rel_est_mam"}, {"display": "EMBL GSS Mammal", "value": "em_rel_gss_mam"}, {"display": "EMBL HTC Mammal", "value": "em_rel_htc_mam"}, {"display": "EMBL HTG Mammal", "value": "em_rel_htg_mam"}, {"display": "EMBL Patent Mammal", "value": "em_rel_pat_mam"}, {"display": "EMBL Standard Mammal", "value": "em_rel_std_mam"}, {"display": "EMBL STS Mammal", "value": "em_rel_sts_mam"}, {"display": "EMBL TSA Mammal", "value": "em_rel_tsa_mam"}, {"display": "EMBL Mouse", "value": "em_rel_mus"}, {"display": "EMBL EST Mouse", "value": "em_rel_est_mus"}, {"display": "EMBL GSS Mouse", "value": "em_rel_gss_mus"}, {"display": "EMBL HTC Mouse", "value": "em_rel_htc_mus"}, {"display": "EMBL HTG Mouse", "value": "em_rel_htg_mus"}, {"display": "EMBL Patent Mouse", "value": "em_rel_pat_mus"}, {"display": "EMBL Standard Mouse", "value": "em_rel_std_mus"}, {"display": "EMBL STS Mouse", "value": "em_rel_sts_mus"}, {"display": "EMBL Phage", "value": "em_rel_phg"}, {"display": "EMBL GSS Phage", "value": "em_rel_gss_phg"}, {"display": "EMBL HTG Phage", "value": "em_rel_htg_phg"}, {"display": "EMBL Patent Phage", "value": "em_rel_pat_phg"}, {"display": "EMBL Standard Phage", "value": "em_rel_std_phg"}, {"display": "EMBL Plant", "value": "em_rel_pln"}, {"display": "EMBL EST Plant", "value": "em_rel_est_pln"}, {"display": "EMBL GSS Plant", "value": "em_rel_gss_pln"}, {"display": "EMBL HTC Plant", "value": "em_rel_htc_pln"}, {"display": "EMBL HTG Plant", "value": "em_rel_htg_pln"}, {"display": "EMBL Patent Plant", "value": "em_rel_pat_pln"}, {"display": "EMBL Standard Plant", "value": "em_rel_std_pln"}, {"display": "EMBL STS Plant", "value": "em_rel_sts_pln"}, {"display": "EMBL TSA Plant", "value": "em_rel_tsa_pln"}, {"display": "EMBL Prokaryote", "value": "em_rel_pro"}, {"display": "EMBL EST Prokaryote", "value": "em_rel_est_pro"}, {"display": "EMBL GSS Prokaryote", "value": "em_rel_gss_pro"}, {"display": "EMBL HTC Prokaryote", "value": "em_rel_htc_pro"}, {"display": "EMBL HTG Prokaryote", "value": "em_rel_htg_pro"}, {"display": "EMBL Patent Prokaryote", "value": "em_rel_pat_pro"}, {"display": "EMBL Standard Prokaryote", "value": "em_rel_std_pro"}, {"display": "EMBL STS Prokaryote", "value": "em_rel_sts_pro"}, {"display": "EMBL Rodent", "value": "em_rel_rod"}, {"display": "EMBL EST Rodent", "value": "em_rel_est_rod"}, {"display": "EMBL GSS Rodent", "value": "em_rel_gss_rod"}, {"display": "EMBL HTC Rodent", "value": "em_rel_htc_rod"}, {"display": "EMBL HTG Rodent", "value": "em_rel_htg_rod"}, {"display": "EMBL Patent Rodent", "value": "em_rel_pat_rod"}, {"display": "EMBL Standard Rodent", "value": "em_rel_std_rod"}, {"display": "EMBL STS Rodent", "value": "em_rel_sts_rod"}, {"display": "EMBL Synthetic", "value": "em_rel_syn"}, {"display": "EMBL Patent Synthetic", "value": "em_rel_pat_syn"}, {"display": "EMBL Standard Synthetic", "value": "em_rel_std_syn"}, {"display": "EMBL Transgenic", "value": "em_rel_tgn"}, {"display": "EMBL Standard Transgenic", "value": "em_rel_std_tgn"}, {"display": "EMBL GSS Transgenic", "value": "em_rel_gss_tgn"}, {"display": "EMBL Unclassified", "value": "em_rel_unc"}, {"display": "EMBL EST Unclassified", "value": "em_rel_est_unc"}, {"display": "EMBL Patent Unclassified", "value": "em_rel_pat_unc"}, {"display": "EMBL Standard Unclassified", "value": "em_rel_std_unc"}, {"display": "EMBL Viral", "value": "em_rel_vrl"}, {"display": "EMBL EST Viral", "value": "em_rel_est_vrl"}, {"display": "EMBL GSS Viral", "value": "em_rel_gss_vrl"}, {"display": "EMBL HTG Viral", "value": "em_rel_htg_vrl"}, {"display": "EMBL Patent Viral", "value": "em_rel_pat_vrl"}, {"display": "EMBL Standard Viral", "value": "em_rel_std_vrl"}, {"display": "EMBL Vertebrate", "value": "em_rel_vrt"}, {"display": "EMBL EST Vertebrate", "value": "em_rel_est_vrt"}, {"display": "EMBL GSS Vertebrate", "value": "em_rel_gss_vrt"}, {"display": "EMBL HTC Vertebrate", "value": "em_rel_htc_vrt"}, {"display": "EMBL HTG Vertebrate", "value": "em_rel_htg_vrt"}, {"display": "EMBL Patent Vertebrate", "value": "em_rel_pat_vrt"}, {"display": "EMBL Standard Vertebrate", "value": "em_rel_std_vrt"}, {"display": "EMBL STS Vertebrate", "value": "em_rel_sts_vrt"}, {"display": "EMBL TSA Vertebrate", "value": "em_rel_tsa_vrt"}, {"display": "EMBL Updates", "value": "emnew"}, {"display": "EMBL Coding Sequence", "value": "emblcds"}, {"display": "EMBL Expressed Sequence Tag", "value": "em_rel_est"}, {"display": "EMBL Genome Survey Sequence", "value": "em_rel_gss"}, {"display": "EMBL High Throughput cDNA", "value": "em_rel_htc"}, {"display": "EMBL High Throughput Genome", "value": "em_rel_htg"}, {"display": "EMBL Patent", "value": "em_rel_pat"}, {"display": "EMBL Standard", "value": "em_rel_std"}, {"display": "EMBL Sequence Tagged Site", "value": "em_rel_sts"}, {"display": "EMBL Transcriptome Shotgun Assembly", "value": "em_rel_tsa"}, {"display": "EMBL Release and Updates", "value": "emall"}, {"display": "EMBL Vectors", "value": "emvec"}]}, "rank": null, "switch_use__description": "Both the switch and the value will be passed in the argument list. They will be separated joined with an equals(=) character with no spaces.", "switch_use__formatstring": "%(switch)s=%(value)s", "switch": "--database", "acceptedExtensionList": [], "helptext": "Database", "batch_bundle_files": false, "file_assignment": "none", "hidden": false, "id": 3697, "switch_use__display_text": "combined with equals"}], "accepts_input": true, "job_type": "single", "enabled": true, "cpus": "", "fs_backend": "nullbackend", "queue": "normal", "module": "python,yabi-tools/andrew", "max_memory": null, "inputExtensions": ["*.fna", "*.ffn", "*.fasta", "*.fa", "*.faa", "*.frn"], "path": "ccg_ebi_rest_run.py", "backend": "nullbackend", "walltime": "", "description": ""}}