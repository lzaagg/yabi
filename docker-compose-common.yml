# data only container pattern
datadev:
  image: muccg/debian8-base:latest
  volumes:
    - .:/app
    - ./data/dev:/data

datatest:
  image: muccg/debian8-base
  volumes:
    - .:/app
    - ./data/tests:/data

dataselenium:
  image: muccg/debian8-base:latest
  volumes:
    - .:/app
    - ./data/selenium:/data

s3:
  image: muccg/fake-s3:latest

ssh:
  image: muccg/ssh
  hostname: ssh

db:
  image: postgres:9.4
  environment:
    - POSTGRES_USER=yabiapp
    - POSTGRES_PASSWORD=yabiapp
  ports:
    - "5432"

mq:
  image: rabbitmq:management
  ports:
    - "5672"
    - "15672"

cache:
  image: memcached:1.4

krb5:
  image: muccg/kerberos
  hostname: kerberos
  domainname: dockerdomain
  command: supervisord
  ports:
    - "9001"
    - "88"
    - "749"
    - "464"

ldap:
  image: muccg/ds389
  hostname: ldap
  domainname: dockerdomain
  command: supervisord
  ports:
    - "9001"
    - "389"
    - "9830"

nginx:
  image: muccg/nginx-uwsgi:1.9
  ports:
    - "8443:443"
    - "8080:80"
  volumes:
    - ./data/nginx:/data

runserver:
  build: .
  command: runserver
  environment:
    - DJANGO_SETTINGS_MODULE=yabi.settings
    - DBUSER=yabiapp
    - WAIT_FOR_QUEUE=1
    - WAIT_FOR_DB=1
    - WAIT_FOR_CACHE=1
    - WAIT_FOR_SSH=1
  ports:
    - "8000:8000"

uwsgi:
  build: .
  command: uwsgi
  environment:
    - DJANGO_SETTINGS_MODULE=yabi.settings
    - DBUSER=yabiapp
    - WAIT_FOR_QUEUE=1
    - WAIT_FOR_DB=1
    - WAIT_FOR_CACHE=1
    - WAIT_FOR_SSH=1
    # note: important to wait for runserver in dev as both will attempt to syncdb etc
    - WAIT_FOR_RUNSERVER=1
  ports:
    - "9000:9000"
    - "9001:9001"
    - "9100:9100"
    - "9101:9101"

celery:
  build: .
  command: celery
  hostname: celery
  environment:
    - DJANGO_SETTINGS_MODULE=yabi.settings
    - CELERY_APP=yabi.backend.celerytasks
    - CELERY_AUTORELOAD=1
    - DBUSER=yabiapp
    - WAIT_FOR_QUEUE=1
    - WAIT_FOR_DB=1
    - WAIT_FOR_CACHE=1
    - WAIT_FOR_SSH=1
