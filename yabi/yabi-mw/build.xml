<project name="yabi" default="userwar" basedir=".">

    <import file="changelog.xml"/>

    <target name="init">
      <!-- Create the time stamp -->
      <tstamp/>
    </target>

    <!-- init needed when making a release -->
    <target name="releaseinit" depends="init, tagFail, createTmp">
      <property name="ccg.site" value="${basedir}/tmp"/>
      <property name="ccg.buildname" value="mw"/>
      <property name="ccg.approot" value="/usr/local/java/tomcat/webapps/"/>
      <property name="ccg.dbhost" value="gromit4.localdomain"/>
      <property name="ccg.dbuser" value="yabimwapp"/> 
      <property name="ccg.dbpass" value="yabimwapp"/>
      <property name="ccg.dbname" value="yabimw"/>
      <property name="ccg.warfilename" value="${basedir}/yabi-${ccg.buildname}.war"/>
      <property name="ccg.srcdir" value="${basedir}/tmp/ccg/yabi-mw/src"/>
      <property name="ccg.cfgdir" value="${basedir}/tmp/ccg/yabi-mw/cfg"/>
      <property name="ccg.libdir" value="${basedir}/tmp/ccg/yabi-mw/lib"/>
      <property name="ccg.tpldir" value="${basedir}/tmp/ccg/yabi-mw/templates"/>
    </target>

    <!-- init needed when making a snapshot release -->
    <target name="snapshotinit" depends="init, createTmp">
      <property name="ccg.site" value="${basedir}/tmp"/>
      <property name="ccg.buildname" value="snapshot"/>
      <property name="ccg.approot" value="/usr/local/java/tomcat/webapps/"/>
      <property name="ccg.dbhost" value="boromirdb.localdomain"/>
      <property name="ccg.dbuser" value="yabimwapp"/> 
      <property name="ccg.dbpass" value="yabimwapp"/>
      <property name="ccg.dbname" value="yabimwdev"/>
      <property name="ccg.warfilename" value="${basedir}/yabi-${ccg.buildname}.war"/>
      <property name="ccg.srcdir" value="${basedir}/tmp/ccg/yabi-mw/src"/>
      <property name="ccg.cfgdir" value="${basedir}/tmp/ccg/yabi-mw/cfg"/>
      <property name="ccg.libdir" value="${basedir}/tmp/ccg/yabi-mw/lib"/>
      <property name="ccg.tpldir" value="${basedir}/tmp/ccg/yabi-mw/templates"/>
    </target>

    <!-- init needed when doing a user deploy -->
    <target name="userbuildinit" depends="createTmp">
      <property name="ccg.site" value="${basedir}/tmp"/>
      <property name="ccg.buildname" value="${user.name}"/>
      <property name="ccg.approot" value="/usr/local/java/glassfish/domains/domain2/autodeploy/"/>
      <property name="ccg.dbhost" value="boromirdb.localdomain"/>
      <property name="ccg.dbuser" value="yabimwapp"/> 
      <property name="ccg.dbpass" value="yabimwapp"/>
      <property name="ccg.dbname" value="yabimwdev"/>
      <property name="ccg.warfilename" value="${basedir}/yabi-${ccg.buildname}.war"/>
      <property name="ccg.jarfilename" value="${basedir}/yabi-${ccg.buildname}.jar"/>
      <property name="ccg.srcdir" value="${basedir}/src"/>
      <property name="ccg.cfgdir" value="${basedir}/cfg"/>
      <property name="ccg.libdir" value="${basedir}/lib"/>
      <property name="ccg.tpldir" value="${basedir}/templates"/>
    </target>

    <!-- remove tmp and recreate it -->
    <target name="createTmp">
      <delete dir="tmp" verbose="true"/>
      <mkdir dir="tmp/classes"/>
    </target>
    <target name="createTmpAgain">
      <delete dir="tmp"/>
      <mkdir dir="tmp/classes"/>
    </target>

    <!-- echo all properties -->
    <target name="echoproperties">
      <echoproperties/>
    </target>

    <!-- Create properties file describing this deployment -->
    <target name="deployProperties" depends="init">
      <propertyfile file="${ccg.site}/deploy.properties" comment="Deploy properties">
        <entry  key="user" value="${user.name}"/>
        <entry  key="buildname" value="${ccg.buildname}"/>
        <entry  key="project" value="${ant.project.name}"/>
        <entry  key="projectDir" value="${basedir}"/>
        <entry  key="build.xml" value="${ant.file}"/>
        <entry  key="approot" value="${ccg.approot}"/>
        <entry  key="buildDate" type="date" value="now" pattern="dd-MM-yyyy HH.mm.ss"/>
        <entry  key="buildNumber" type="int" operation="+" default="0000" pattern="0000"/>
      </propertyfile>
      <chmod perm="g+rw" file="${ccg.site}/deploy.properties"/>
    </target>

    <target name="compile" depends="appProperties">
      <javac srcdir="${ccg.srcdir}" destdir="${ccg.site}/classes" target="1.4" source="1.4">
        <classpath>
          <fileset dir="${ccg.libdir}">
            <include name="**/*.jar"/>
          </fileset>
          <fileset file="/usr/local/java/tomcat/common/lib/servlet-api.jar"/>
        </classpath>
      </javac>
    </target>

    <target name="jar">
      <jar jarfile="${ccg.jarfilename}" basedir="${ccg.site}/classes/" compress="false" />
    </target>
    
    <!-- Create properties file containing attributes for munging -->
    <target name="appProperties" depends="init">
      <propertyfile file="${ccg.site}/yabi-mw.properties" comment="App properties">
        <entry  key="buildname" value="${ccg.buildname}"/>
        <entry  key="project" value="${ant.project.name}"/>
        <entry  key="approot" value="${ccg.approot}"/>
        <entry  key="dbhost" value="${ccg.dbhost}"/>
        <entry  key="dbuser" value="${ccg.dbuser}"/>
        <entry  key="dbpass" value="${ccg.dbpass}"/>
        <entry  key="dbname" value="${ccg.dbname}"/>
        <entry  key="hibernate.configfile" value="yabi-hibernate.cfg.xml"/>
        <entry  key="jbpmconfigfile" value="yabi-jbpm.cfg.xml"/>
      </propertyfile>
    </target>

    <!-- config file copy and munge/rename -->
	<target name="configCopy">
	  <echo message="Copying config files to classes folder"/>
      <filter filtersfile="${ccg.site}/yabi-mw.properties"/>
	  <copy file="${ccg.cfgdir}/jbpm.cfg.xml" tofile="${ccg.site}/classes/yabi-jbpm.cfg.xml" filtering="true" overwrite="true"/>
	  <copy file="${ccg.cfgdir}/log4j.properties" tofile="${ccg.site}/classes/log4j.properties" overwrite="true"/>
      <copy file="${ccg.cfgdir}/hibernate.cfg.xml" tofile="${ccg.site}/classes/yabi-hibernate.cfg.xml" filtering="true" overwrite="true"/>
      <copy file="${ccg.cfgdir}/web.xml" tofile="${ccg.site}/web.xml" filtering="true" overwrite="true"/>
      <copy file="${ccg.cfgdir}/velocityxml.cfg" tofile="${ccg.site}/cfg/velocityxml.cfg" overwrite="true"/>
      <copy file="${ccg.cfgdir}/struts-config.xml" tofile="${ccg.site}/cfg/struts-config.xml" overwrite="true"/>
      <copy file="${ccg.cfgdir}/toolbox.xml" tofile="${ccg.site}/cfg/toolbox.xml" overwrite="true"/>
      <copy file="${ccg.cfgdir}/hibernate/StringInstance.hbm.xml" tofile="${ccg.site}/classes/StringInstance.hbm.xml" overwrite="true"/>
      <copy file="${ccg.cfgdir}/hibernate/StringUpdateLog.hbm.xml" tofile="${ccg.site}/classes/StringUpdateLog.hbm.xml" overwrite="true"/>
      <copy file="${ccg.cfgdir}/hibernate/HibernateStringInstance.hbm.xml" tofile="${ccg.site}/classes/HibernateStringInstance.hbm.xml" overwrite="true"/>
      <copy file="${ccg.cfgdir}/yabi-mw.properties" tofile="${ccg.site}/classes/yabi-mw.properties" overwrite="true"/>
      <copy file="${ccg.cfgdir}/baat.dtd" tofile="${ccg.site}/classes/au/edu/murdoch/ccg/baat.dtd" overwrite="true"/>
	</target>

    <target name="templateCopy">
      <filter filtersfile="${ccg.site}/yabi-mw.properties"/>
      <copy todir="${ccg.site}/templates" filtering="true" overwrite="true">
        <fileset dir="${ccg.tpldir}">
          <include name="**"/>
        </fileset>
      </copy>
    </target>

    <target name="tagFail" unless="cbbc.tag">
      <fail>cbbc.tag must be set</fail>
    </target>

    <target name="tmpSvnCheckoutTag">
      <exec executable="svn" failonerror="true">
      <arg line="co svn+ssh://minerva.localdomain/usr/local/svnroot/ccg/yabi/yabi-mw-tags/${cbbc.tag} tmp/ccg/yabi/yabi-mw"/>
      </exec>
    </target>

    <target name="tmpSvnCheckout">
      <exec executable="svn" failonerror="true">
      <arg line="co svn+ssh://${user.name}@minerva.localdomain/usr/local/svnroot/ccg/yabi/yabi-mw/ tmp/ccg/yabi-mw/"/>
      </exec>
    </target>
	
	<target name="createWar" depends="appProperties, configCopy, templateCopy, compile">
	  <war destfile="${ccg.warfilename}" webxml="${ccg.site}/web.xml">
	  	<fileset dir="${ccg.site}">
            <include name="templates/**"/>
        </fileset>
	  	<lib dir="${ccg.libdir}"/>
	  	<classes dir="${ccg.site}/classes"/>
        <webinf dir="${ccg.site}/cfg">
            <include name="*"/>
        </webinf>
	  </war>
	</target>
	
	<target name="deployWar">
	  <copy file="${ccg.warfilename}" todir="${ccg.approot}"/>
	</target>
	
    <target name="release" depends="releaseinit, tmpSvnCheckoutTag, createWar, deployWar " />
    <target name="snapshot" depends="snapshotinit, tmpSvnCheckout, createWar, deployWar" />
	
    <target name="usercompile" depends="userbuildinit, compile" />
    <target name="userwar" depends="userbuildinit, createWar, deployWar" />

</project>
