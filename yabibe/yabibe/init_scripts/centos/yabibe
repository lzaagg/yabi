#! /bin/bash
#
# portmap       Start/Stop RPC portmapper
#
# chkconfig: 345 13 87
# description: The portmapper manages RPC connections, which are used by \
#              protocols such as NFS and NIS. The portmap server must be \
#              running on machines which act as servers for protocols which \
#              make use of the RPC mechanism.
# processname: portmap

set -e

NAME="yabibe"
#TWISTDLIST="/usr/local/yabi/src/yabi-be-twisted/release/mypython/bin/twistd"
#TWISTDLIST="virt_yabi-be-twisted/bin/twistd"
TWISTDLIST=( "virt_yabibe/bin/twistd" "/usr/local/yabi/src/yabi-be-twisted/release/virt_release/bin/twistd" "twistd" "/usr/local/bin/twistd" "/usr/bin/twistd" )
CONFFILE="yabi.conf"

for T in "${TWISTDLIST[@]}"
do
    if [ -f $T ] && [ -x $T ]
    then
        TWISTD=$T
    fi
done

if [ "X$TWISTD" = "X" ] ; then
    echo "twistd not found. aborting."
    exit 1
fi

echo "using $TWISTD..."

# This is an interactive program, we need the current locale
[ -f /etc/profile.d/lang.sh ] && . /etc/profile.d/lang.sh
# We can't Japanese on normal console at boot time, so force LANG=C.
if [ "$LANG" = "ja" -o "$LANG" = "ja_JP.eucJP" ]; then
    if [ "$TERM" = "linux" ] ; then
        LANG=C
    fi
fi

# Source function library. Cannot be run reliable set -e
set +e
. /etc/init.d/functions
set -e

# INI file parser
cfg.parser () {
    CONFIG_FILE=$1
    runningdir=`cat "$CONFIG_FILE" | grep -i '^runningdir' | head -1 | cut -d '#' -f 1 | cut -d ':'  -f 2`
    logfile=`cat "$CONFIG_FILE" | grep -i 'logfile' | head -1 | cut -d '#' -f 1 | cut -d ':'  -f 2`
    pidfile=`cat "$CONFIG_FILE" | grep -i 'pidfile' | head -1 | cut -d '#' -f 1 | cut -d ':'  -f 2`
    sourcedir=`cat "$CONFIG_FILE" | grep -i 'source' | head -1 | cut -d '#' -f 1 | cut -d ':'  -f 2`
}
        
# search a path for a file
find_conf () {
    for PART in "${HOME}/.yabi/${CONFFILE}" "${HOME}/.yabi/backend/${CONFFILE}" "${HOME}/${CONFFILE}" "${HOME}/.yabi" "/etc/${CONFFILE}" "/etc/yabi/${CONFFILE}"  "./conf/yabi_defaults.conf"
    do
        if [ -f $PART ]
        then
            YABICONF=$PART
            return 0
        fi
    done
    
}
        
find_conf
echo "using config file $YABICONF..."
        
#  check for required files
if [ ! -x "${TWISTD}" ]
then
        echo "$0: Aborting, no $TWISTD found."
        exit 0
fi
# if [ ! -r "${TAP}" ]
# then
#         echo "$0: Aborting, no file $TAP found."
#         exit 0
# fi
if [ "X$YABICONF" = "X" ]
then
        echo "$0: Aborting, no yabi.conf found"
        exit 0
fi

# read configuration.
cfg.parser $YABICONF

# setup parameters
if [ "${runningdir}X" = "X" ]; then RUNNING_DIR="/var/run/yabi/backend"; else RUNNING_DIR=$runningdir; fi
if [ "${logfile}X" = "X" ]; then LOG_FILE="/var/log/yabi/backend.log"; else LOG_FILE=$logfile; fi
if [ "${pidfile}X" = "X" ]; then PID_FILE="/var/run/yabi/backend.pid"; else PID_FILE=$pidfile; fi
if [ "${sourcedir}X" = "X" ]; then SOURCE="${HOME}/yabi/yabi-be-twisted"; else SOURCE=$sourcedir; fi

TAP="${SOURCE}/server.py"

#  set up run directory if necessary
if [ ! -d ${RUNNING_DIR} ]
then
        echo "$0: Aborting, running directory $RUNNING_DIR does not exist."
        exit 0
fi

if [ ! -f ${TAP} ]
then
        echo "$0: Aborting, tap file ${TAP} not found."
        exit 0
fi

case "$1" in
        start)
                echo -n "Starting $NAME..."
                ${TWISTD} --pidfile=$PID_FILE --rundir=$RUNNING_DIR --python=${TAP}
                status -p $PID_FILE $NAME
                ;;

        stop)
                echo -n "Stopping ${NAME}..."
                kill `cat "${PID_FILE}"`
                sleep 3
                PID=`cat "${PID_FILE}" 2>/dev/null`
                kill -9 $PID >& /dev/null
                rm -f "${PID_FILE}" >& /dev/null
                status -p $PID_FILE $NAME
                ;;

        restart)
                "${0}" stop
                "${0}" start
                ;;

    *)
                echo "Usage: ${0} {start|stop|restart|}" >&2
                exit 1
                ;;
esac

exit 0
